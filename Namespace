#include <iostream>

enum{max_len = 20}; 
namespace arrey_alg{
	namespace filter_func{
    	int even(int x)
		{
     	return x % 2;   
		}
	} // end filte_)func
typedef int (*PTR_FILTER_FUNC) (int);
size_t filter_int(int* ar, size_t len_ar, PTR_FILTER_FUNC func)
{
    int i = 0,j,d,count = 0;
    while(i < len_ar)
    {
        d = i;
        if(func(ar[i]))
        {
            j = i;
            while(j < len_ar)
                ar[d++] = ar[++j];
            count++;
        }
        i++;
    }
    return len_ar - count;
}
} // end arrey_aig	5 34 10 4 7 8 3 2
int main()
{
    int arr[max_len] = {0};
    size_t length = 0;
    while(length < max_len && (std::cin >> arr[length]))
        length++;
    size_t res = arrey_alg::filter_int(arr, length, arrey_alg::filter_func::even);
    for(int i = 0; i < res; i++)
        std::cout << arr[i] << ' ';
    return 0;
}
